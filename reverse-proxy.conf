# Main Nginx Configuration
user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/conf.d/*.conf;

    # SSL Configuration - Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name stg.skycare.au app.skycare.au;

        # Redirect HTTP to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # Staging Environment (with SSL)
    server {
        listen 443 ssl;
        server_name stg.skycare.au;

        ssl_certificate /etc/letsencrypt/live/stg.skycare.au/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/stg.skycare.au/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 10m;
        ssl_dhparam /etc/ssl/certs/dhparam.pem;

        # Staging Frontend - Vite Application
        location / {
            proxy_pass http://frontend-staging:80; # Frontend container for staging
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Staging Backend API
        location /api/ {
            proxy_pass http://backend-staging:5000; # Docker container for staging backend
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # # Production Environment (with SSL)
    # server {
    #     listen 443 ssl;
    #     server_name app.skycare.au;

    #     ssl_certificate /etc/letsencrypt/live/app.skycare.au/fullchain.pem;
    #     ssl_certificate_key /etc/letsencrypt/live/app.skycare.au/privkey.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:1m;
    #     ssl_session_timeout 10m;
    #     ssl_dhparam /etc/ssl/certs/dhparam.pem;
    #     # Production Frontend - Vite Application
    #     location / {
    #         proxy_pass http://frontend-production:80; # Frontend container for staging
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
    #     # Production Backend API
    #     location /api/ {
    #         proxy_pass http://backend-production:5001; # Docker container for production backend
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
    # }
    # Additional configurations for Let's Encrypt
    server {
        listen 80;
        server_name stg.skycare.au app.skycare.au;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
    }

    # HTTP Strict Transport Security (HSTS) - Optional, enable after SSL certs are set up
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

}
